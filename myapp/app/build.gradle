plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    // MySQL JDBC Driver
    implementation 'com.mysql:mysql-connector-j:8.3.0'

    // JSON 라이브러리
    //implementation 'com.google.code.gson:gson:2.10.1'

    // 임베디드 Tomcat 서버
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.85'

    // JSTL 라이브러리
    implementation 'javax.servlet:jstl:1.2'

    // log4j 2.x 라이브러리
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    // Spring IoC 컨테이너
    //implementation 'org.springframework:spring-context:5.3.32'

    // Spring WebMVC 라이브러리
    implementation 'org.springframework:spring-webmvc:5.3.32'

    // Spring JDBC framework
    implementation 'org.springframework:spring-jdbc:5.3.32'

    // Mybatis 라이브러리
    implementation 'org.mybatis:mybatis:3.5.15'

    // Mybatis - Spring 연동 라이브러리
    // Mybartis 3.5를 Spring 6.0.x와 연동시켜주는 라이브러리
    //implementation 'org.mybatis:mybatis-spring:3.0.3'
    //Mybartis 3.5를 Spring 5.x와 연동시켜주는 라이브러리
    implementation 'org.mybatis:mybatis-spring:2.1.2'

    // Lombok 라이브러리
    // compileOnly?
    // 컴파일 할 떄만 이 라이브러리를 사용한다
    // 컴파일 완료된 후에는 이 라이브러리가 필요없다.
    // 배포파일에는 포함시키지 않는다.
    compileOnly 'org.projectlombok:lombok:1.18.32'
    // Lombok 애노테이션을 처리할 라이브러리
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // 단위테스트 소스를 컴파일할 때만 사용
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.google.guava:guava:32.1.1-jre'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'bitcamp.myapp.App'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 자바 소스를 컴파일 할 때 적용할 옵션(Gradle 로 컴파일 할 때)
tasks.withType(JavaCompile).configureEach {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8'
}

run {
    standardInput = System.in
}